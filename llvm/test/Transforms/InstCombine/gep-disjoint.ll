; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

; test that when offset is know while indexing arrays
; folding optimization takes place on the addition which gets folded into an OR

target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"

define ptr @test(ptr %arr, i32 %conv) {
; CHECK-LABEL: define ptr @test(
; CHECK-SAME: ptr [[ARR:%.*]], i32 [[CONV:%.*]]) {
; CHECK-NEXT:    [[TMP1:%.*]] = sext i32 [[CONV]] to i64
; CHECK-NEXT:    [[TMP2:%.*]] = getelementptr i8, ptr [[ARR]], i64 [[TMP1]]
; CHECK-NEXT:    [[ARRAYIDX9:%.*]] = getelementptr i8, ptr [[TMP2]], i64 1
; CHECK-NEXT:    ret ptr [[ARRAYIDX9]]
;
  %or7 = or disjoint i32 %conv, 1
  %idxprom8 = zext nneg i32 %or7 to i64
  %arrayidx9 = getelementptr i8, ptr %arr, i64 %idxprom8
  ret ptr %arrayidx9
}
